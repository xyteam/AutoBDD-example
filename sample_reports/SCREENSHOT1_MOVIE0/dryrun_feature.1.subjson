[
  {
    "description": "    As a developer\n    I want to be able to test browser error log",
    "elements": [
      {
        "id": "test-browser-log;test-browser-log-without-error",
        "keyword": "Scenario",
        "line": 6,
        "name": "Test browser log without error",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the path \"/index.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the browser console log should not contain \"any error\" words",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the last browser console SEVERE level log does not appear",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the last browser console SEVERE level log does appear exactly 0 time",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I announce message at browser: \"ENV:LastBrowserLog\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-table",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-browser-log;browser-log-should-display-referenceerror-error",
        "keyword": "Scenario",
        "line": 13,
        "name": "Browser log should display ReferenceError error",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the path \"/jserror.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the browser console SEVERE level log does appear",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the last browser console SEVERE level log does not appear more than 1 time",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the last browser console log should contain \"ReferenceError\" words",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I announce message at browser: \"ENV:LastBrowserLog\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-table",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-browser-log",
    "keyword": "Feature",
    "line": 2,
    "name": "Test browser log",
    "tags": [
      {
        "name": "@test-table",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-browser/features/testBrowserLog.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test the attributes of a given element",
    "elements": [
      {
        "id": "test-the-attributes-of-a-given-element;the-attribute-\"role\"-of-a-element-should-be-\"note\"",
        "keyword": "Scenario",
        "line": 9,
        "name": "The attribute \"role\" of a element should be \"note\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the attribute \"role\" from element \"#attributeComparison\" is \"note\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-attributes-of-a-given-element;the-attribute-\"role\"-of-a-element-should-not-be-\"main\"",
        "keyword": "Scenario",
        "line": 12,
        "name": "The attribute \"role\" of a element should not be \"main\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the attribute \"role\" from element \"#attributeComparison\" is not \"main\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-attributes-of-a-given-element;the-css-attribute-\"color\"-of-a-element-should-be-\"red\"",
        "keyword": "Scenario",
        "line": 15,
        "name": "The CSS attribute \"color\" of a element should be \"red\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the css attribute \"color\" from element \"#cssAttributeComparison\" is \"rgba(255,0,0,1)\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-attributes-of-a-given-element;the-css-attribute-\"color\"-of-a-element-should-not-be-\"blue\"",
        "keyword": "Scenario",
        "line": 18,
        "name": "The CSS attribute \"color\" of a element should not be \"blue\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the css attribute \"color\" from element \"#cssAttributeComparison\" is not \" rgba(0,255,0,1)\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-attributes-of-a-given-element;the-(missing)-css-attribute-\"border\"-of-a-element-should-not-be-\"0\"",
        "keyword": "Scenario",
        "line": 21,
        "name": "The (missing) CSS attribute \"border\" of a element should not be \"0\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the css attribute \"border\" from element \"#cssAttributeComparison\" is not \"0\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-attributes-of-a-given-element;the-css-attribute-\"font-weight\"-of-a-element-should-be-\"700\"",
        "keyword": "Scenario",
        "line": 24,
        "name": "The CSS attribute \"font-weight\" of a element should be \"700\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the css attribute \"font-weight\" from element \"#cssAttributeComparison\" is \"700\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-attributes-of-a-given-element",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the attributes of a given element",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/attribute.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a certain action is performed when a certain\n    button is pressed",
    "elements": [
      {
        "id": "test-button-press;test-if-element-responds-to-button-press",
        "keyword": "Scenario",
        "line": 11,
        "name": "Test if element responds to button press",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click mouse at the center position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#testKeyResponse\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I press the \"a\" key to the screen",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testKeyResponse\" contains the text \"65\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-button-press;test-if-element-responds-to-button-press",
        "keyword": "Scenario",
        "line": 16,
        "name": "Test if element responds to button press",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click mouse at the center position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#testKeyResponse\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I press the \"b\" key to the screen",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testKeyResponse\" not contains the text \"65\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-button-press;test-if-element-responds-to-button-press",
        "keyword": "Scenario",
        "line": 22,
        "name": "Test if element responds to button press",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click mouse at the center position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#testKeyResponse\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I press the \"escape\" key to the screen",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testKeyResponse\" contains the text \"27\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-button-press",
    "keyword": "Feature",
    "line": 2,
    "name": "Test button press",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/buttonPress.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test the selected state of a checkbox",
    "elements": [
      {
        "id": "test-the-selected-state-of-a-checkbox;the-checkbox-should-not-be-selected-by-default",
        "keyword": "Scenario",
        "line": 9,
        "name": "The checkbox should not be selected by default",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#checkbox\" is not checked",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-selected-state-of-a-checkbox;the-checkbox-should-be-checked-when-clicked",
        "keyword": "Scenario",
        "line": 12,
        "name": "The checkbox should be checked when clicked",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the checkbox \"#checkbox\" is not checked",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#checkbox\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#checkbox\" is checked",
            "result": {
              "status": "undefined"
            },
            "line": 15
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-selected-state-of-a-checkbox;the-checkbox-should-deselect-when-clicked-twice",
        "keyword": "Scenario",
        "line": 17,
        "name": "The checkbox should deselect when clicked twice",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the checkbox \"#checkbox\" is not checked",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#checkbox\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click on the element \"#checkbox\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#checkbox\" is not checked",
            "result": {
              "status": "undefined"
            },
            "line": 21
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-selected-state-of-a-checkbox",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the selected state of a checkbox",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/checkbox.feature"
  },
  {
    "description": "    As a developer\n    I want the demo app have the correct title",
    "elements": [
      {
        "id": "local-server-test;is-not-google",
        "keyword": "Scenario",
        "line": 9,
        "name": "Is not Google",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the page title does not equal the text \"Google\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "local-server-test;is-correct",
        "keyword": "Scenario",
        "line": 12,
        "name": "Is correct",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the page title does equal the text \"DEMO APP\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "local-server-test",
    "keyword": "Feature",
    "line": 2,
    "name": "Local server test",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/checkTitle.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a element has a certain CSS class",
    "elements": [
      {
        "id": "test-if-a-given-element-has-a-certain-css-class;element-#classtest-should-have-the-class-\"class1\"",
        "keyword": "Scenario",
        "line": 11,
        "name": "Element #classTest should have the class \"class1\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#classTest\" has the class \"class1\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 3
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-a-given-element-has-a-certain-css-class;element-#classtest-should-also-have-the-class-\"class2\"",
        "keyword": "Scenario",
        "line": 14,
        "name": "Element #classTest should also have the class \"class2\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#classTest\" has the class \"class2\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 3
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-a-given-element-has-a-certain-css-class;element-#classtest-should-not-have-the-class-\"class3\"",
        "keyword": "Scenario",
        "line": 17,
        "name": "Element #classTest should not have the class \"class3\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#classTest\" does not have the class \"class3\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 3
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-if-a-given-element-has-a-certain-css-class",
    "keyword": "Feature",
    "line": 4,
    "name": "Test if a given element has a certain CSS class",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 3
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/class.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test how (double) clicks are handled by certain elements",
    "elements": [
      {
        "id": "test-how-clicks-are-handled-on-a-certain-element;single-click-on-a-link-should-navigate-to-another-page",
        "keyword": "Scenario",
        "line": 9,
        "name": "Single click on a link should navigate to another page",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the link \"Navigate to example.com\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the full URL to contain \"https://example.com\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-how-clicks-are-handled-on-a-certain-element;single-click-on-the-button-#togglemessage-should-display-an-message",
        "keyword": "Scenario",
        "line": 14,
        "name": "Single click on the button #toggleMessage should display an message",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#toggleMessage\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#message1\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#message2\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 17
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          },
          {
            "name": "@Isolate",
            "line": 13
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-how-clicks-are-handled-on-a-certain-element;double-click-on-the-button-#togglemessage-should-display-another-message",
        "keyword": "Scenario",
        "line": 19,
        "name": "Double click on the button #toggleMessage should display another message",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I double click on the button \"#toggleMessage\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#message1\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#message2\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 22
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-how-clicks-are-handled-on-a-certain-element;single-click-on-the-element-#togglebackground-should-make-the-elemnt-red",
        "keyword": "Scenario",
        "line": 24,
        "name": "Single click on the element #toggleBackground should make the elemnt red",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#toggleBackground\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-how-clicks-are-handled-on-a-certain-element;double-click-on-the-element-#togglebackground-should-make-the-elemnt-blue",
        "keyword": "Scenario",
        "line": 27,
        "name": "Double click on the element #toggleBackground should make the elemnt blue",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I double click on the element \"#toggleBackground\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-how-clicks-are-handled-on-a-certain-element",
    "keyword": "Feature",
    "line": 2,
    "name": "Test how clicks are handled on a certain element",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/click.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test the existence and/or the content of cookies",
    "elements": [
      {
        "id": "test-the-existens-and-content-of-cookies;the-cookie-\"test\"-should-exist",
        "keyword": "Scenario",
        "line": 10,
        "name": "The cookie \"test\" should exist",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test\" exists",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-existens-and-content-of-cookies;the-cookie-\"test2\"-should-not-exist",
        "keyword": "Scenario",
        "line": 13,
        "name": "The cookie \"test2\" should not exist",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the cookie \"test\" contains the value \"yumyum\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test2\" not exists",
            "result": {
              "status": "undefined"
            },
            "line": 15
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-existens-and-content-of-cookies;the-cookie-\"test\"-should-contain-the-value-\"yumyum\"",
        "keyword": "Scenario",
        "line": 17,
        "name": "The cookie \"test\" should contain the value \"yumyum\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the cookie \"test\" contains not the value \"out of date\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test\" contains \"yumyum\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-existens-and-content-of-cookies;the-cookie-\"test\"-should-not-contain-the-value-\"out-of-date\"",
        "keyword": "Scenario",
        "line": 21,
        "name": "The cookie \"test\" should not contain the value \"out of date\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test\" not contains \"out of date\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-existens-and-content-of-cookies;the-cookie-\"test3\"-should-be-created",
        "keyword": "Scenario",
        "line": 29,
        "name": "The cookie \"test3\" should be created",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set a cookie \"test3\" with the content \"more cookies\"",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test3\" exists",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the cookie \"test3\" contains \"more cookies\"",
            "result": {
              "status": "undefined"
            },
            "line": 32
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          },
          {
            "name": "@Pending",
            "line": 28
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-existens-and-content-of-cookies;the-cookie-\"test3\"-should-be-deletable",
        "keyword": "Scenario",
        "line": 35,
        "name": "The cookie \"test3\" should be deletable",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test3\" exists",
            "result": {
              "status": "undefined"
            },
            "line": 36
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I delete the cookie \"test3\"",
            "result": {
              "status": "undefined"
            },
            "line": 37
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test3\" not exists",
            "result": {
              "status": "undefined"
            },
            "line": 38
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          },
          {
            "name": "@Pending",
            "line": 34
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-existens-and-content-of-cookies",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the existens and content of cookies",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/cookie.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to test the demoapp drag and drop feature by webelement and by image",
    "elements": [
      {
        "id": "demoapp-drag-and-drop;drag-to-dropzone---by-webelement",
        "keyword": "Scenario",
        "line": 8,
        "name": "Drag to dropzone - by webelement",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I scroll to the element \"head\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#draggable\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#droppable\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I drag element \"#draggable\" to element \"#droppable\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#droppable\" contains the text \"Dropped!\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@SmokeTest",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "demoapp-drag-and-drop;drag-to-dropzone---by-image",
        "keyword": "Scenario",
        "line": 16,
        "name": "Drag to dropzone - by image",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I scroll to the element \"head\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Drag_me\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"Drag_me\" image does contain the text \"Drag me!\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I should see the \"Dropzone\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"Dropzone\" image does contain the text \"Dropzone\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I drag \"Drag_me\" and drop to \"Dropzone\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should still see the \"Drag_me\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should not see the \"Dropzone\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 25
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@SmokeTest",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "demoapp-drag-and-drop",
    "keyword": "Feature",
    "line": 3,
    "name": "demoapp drag and drop",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      },
      {
        "name": "@SmokeTest",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/demoapp_drag_and_drop.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test a given draggable element",
    "elements": [
      {
        "id": "test-draggable-elements;drag-to-dropzone",
        "keyword": "Scenario",
        "line": 16,
        "name": "Drag to dropzone",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 1024 by 768 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I scroll to the element \"head\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#draggable\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#droppable\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I drag element \"#draggable\" to element \"#droppable\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#droppable\" contains the text \"Dropped!\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-draggable-elements",
    "keyword": "Feature",
    "line": 2,
    "name": "Test draggable elements",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/drag.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to try out dropdown list automation:\n    1. click page elements\n    2. click page images",
    "elements": [
      {
        "id": "dropdown-list;click-drop-down-list---by-webelement",
        "keyword": "Scenario",
        "line": 9,
        "name": "Click Drop-Down List - by webelement",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the page title to contain \"demo app\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"footer\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Option #1\" option on the page",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click the \"Option #1\" option on the page",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Option #2\" option on the page",
            "result": {
              "status": "undefined"
            },
            "line": 15
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "dropdown-list;click-drop-down-list---by-tryclick",
        "keyword": "Scenario",
        "line": 17,
        "name": "Click Drop-Down List - by tryClick",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the page title to contain \"demo app\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"footer\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Option #1\" option on the page",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I tryClick the 4th element \"option\" inside the parent element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Option #4\" option on the page",
            "result": {
              "status": "undefined"
            },
            "line": 23
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "dropdown-list;click-drop-down-list---by-deepclick",
        "keyword": "Scenario",
        "line": 25,
        "name": "Click Drop-Down List - by deepClick",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the page title to contain \"demo app\"",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"footer\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Option #1\" option on the page",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I deepClick the 4th element \"option\" inside the parent element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Option #4\" option on the page",
            "result": {
              "status": "undefined"
            },
            "line": 31
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "dropdown-list;click-drop-down-list---by-image",
        "keyword": "Scenario",
        "line": 33,
        "name": "Click Drop-Down List - by image",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 34
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"footer\"",
            "result": {
              "status": "undefined"
            },
            "line": 35
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"First_option\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 36
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the \"First_option\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 37
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"First_option_Opened\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 38
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "dropdown-list",
    "keyword": "Feature",
    "line": 2,
    "name": "dropdown list",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/dropdown_list.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test the existence of a element",
    "elements": [
      {
        "id": "test-existence-of-elements;none-existing-element-check",
        "keyword": "Scenario",
        "line": 9,
        "name": "None existing element check",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#noneExisting\" does not exist",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-existence-of-elements;existing-element-check",
        "keyword": "Scenario",
        "line": 12,
        "name": "Existing element check",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#exisiting\" does exist",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-existence-of-elements;existing-element-count-check",
        "keyword": "Scenario",
        "line": 15,
        "name": "Existing element count check",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the element \"input\" does exist exactly 8 times",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-existence-of-elements;existing-element-inside-parent-element-count-check",
        "keyword": "Scenario",
        "line": 18,
        "name": "Existing element inside parent element count check",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the element \"div\" inside the parent element \"//div[@style]\" does exist exactly 2 times",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-existence-of-elements",
    "keyword": "Feature",
    "line": 2,
    "name": "Test existence of elements",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/elementExistence.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a element has a certain position",
    "elements": [
      {
        "id": "test-the-position-of-a-given-element;the-element-#square100x100-is-at-xx-pixels-on-the-x-axis",
        "keyword": "Scenario",
        "line": 13,
        "name": "The element #square100x100 is at XX pixels on the X axis",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 800 by 600 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px broad",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px tall",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#square100x100\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is positioned at 32.5px on the x axis",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-position-of-a-given-element;the-element-#square100x100-is-at-xx-pixels-on-the-y-axis",
        "keyword": "Scenario",
        "line": 17,
        "name": "The element #square100x100 is at XX pixels on the Y axis",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 800 by 600 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px broad",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px tall",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#square100x100\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is positioned at 1084px on the y axis",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          },
          {
            "name": "@Pending",
            "line": 16
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-position-of-a-given-element;the-element-#square100x100-is-not-at-yy-pixels-on-the-x-axis",
        "keyword": "Scenario",
        "line": 20,
        "name": "The element #square100x100 is not at YY pixels on the X axis",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 800 by 600 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px broad",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px tall",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#square100x100\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is not positioned at 101px on the x axis",
            "result": {
              "status": "undefined"
            },
            "line": 21
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-position-of-a-given-element;the-element-#square100x100-is-not-at-yy-pixels-on-the-y-axis",
        "keyword": "Scenario",
        "line": 23,
        "name": "The element #square100x100 is not at YY pixels on the y axis",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 800 by 600 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px broad",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#square100x100\" is 100px tall",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#square100x100\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is not positioned at 99px on the y axis",
            "result": {
              "status": "undefined"
            },
            "line": 24
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-position-of-a-given-element",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the position of a given element",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/elementPosition.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a element has a certain width and/or height",
    "elements": [
      {
        "id": "test-the-width-and-height-of-a-given-element;the-element-#square100x100-whould-have-a-width-of-100px",
        "keyword": "Scenario",
        "line": 9,
        "name": "The element #square100x100 whould have a width of 100px",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is 100px broad",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-width-and-height-of-a-given-element;the-element-#square100x100-whould-have-a-height-of-100px",
        "keyword": "Scenario",
        "line": 12,
        "name": "The element #square100x100 whould have a height of 100px",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is 100px tall",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-width-and-height-of-a-given-element;the-element-#square100x100-whould-not-have-a-width-of-101px",
        "keyword": "Scenario",
        "line": 15,
        "name": "The element #square100x100 whould not have a width of 101px",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is not 101px broad",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-width-and-height-of-a-given-element;the-element-#square100x100-whould-not-have-a-height-of-99px",
        "keyword": "Scenario",
        "line": 18,
        "name": "The element #square100x100 whould not have a height of 99px",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#square100x100\" is not 99px tall",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-width-and-height-of-a-given-element",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the width and height of a given element",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/elementSize.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test the visibillity of a element",
    "elements": [
      {
        "id": "test-visibility-of-elements;invisible-elements-to-be-invisible",
        "keyword": "Scenario",
        "line": 10,
        "name": "Invisible elements to be invisible",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#hidden\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-visibility-of-elements;visible-elements-to-be-visible",
        "keyword": "Scenario",
        "line": 13,
        "name": "Visible elements to be visible",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#visible\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-visibility-of-elements;element-should-become-visible",
        "keyword": "Scenario",
        "line": 16,
        "name": "Element should become visible",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#makeVisible\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#btnMakeVisible\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#makeVisible\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-visibility-of-elements;element-should-become-invisible",
        "keyword": "Scenario",
        "line": 21,
        "name": "Element should become invisible",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#makeInvisible\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#btnMakeInvisible\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#makeInvisible\" becomes not visible",
            "result": {
              "status": "undefined"
            },
            "line": 24
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-visibility-of-elements;element-in-the-viewport",
        "keyword": "Scenario",
        "line": 26,
        "name": "Element in the viewport",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"h1\"",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"h1\" is within the viewport",
            "result": {
              "status": "undefined"
            },
            "line": 28
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-visibility-of-elements;element-outside-the-viewport",
        "keyword": "Scenario",
        "line": 30,
        "name": "Element outside the viewport",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#footer\"",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"h1\" is not within the viewport",
            "result": {
              "status": "undefined"
            },
            "line": 32
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-visibility-of-elements",
    "keyword": "Feature",
    "line": 2,
    "name": "Test visibility of elements",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/elementVisibility.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a element has a certain focus state",
    "elements": [
      {
        "id": "test-the-focus-state-of-a-given-element;the-element-#textinput-should-not-have-the-focus-by-default",
        "keyword": "Scenario",
        "line": 9,
        "name": "The element #textinput should not have the focus by default",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textinput\" is not focused",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-focus-state-of-a-given-element;the-element-#textinput-should-have-the-focus-when-selected",
        "keyword": "Scenario",
        "line": 12,
        "name": "The element #textinput should have the focus when selected",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#textinput\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textinput\" is focused",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-focus-state-of-a-given-element",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the focus state of a given element",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/focus.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test form submission",
    "elements": [
      {
        "id": "test-form-submission;test-if-a-message-is-shown-when-the-form-is-submitted",
        "keyword": "Scenario",
        "line": 9,
        "name": "Test if a message is shown when the form is submitted",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#formSubmitTest .message\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I submit the form \"#formSubmitTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#formSubmitTest .message\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 12
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-form-submission",
    "keyword": "Feature",
    "line": 2,
    "name": "Test form submission",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/form.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test input fields on a certain page",
    "elements": [
      {
        "id": "test-input-fields-on-a-page;set-the-content-of-a-input-field",
        "keyword": "Scenario",
        "line": 10,
        "name": "Set the content of a input field",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" not contains any value",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"test\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" contains some value",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#testInput\" contains the value \"test\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-input-fields-on-a-page;add-content-to-a-input-field",
        "keyword": "Scenario",
        "line": 15,
        "name": "Add content to a input field",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" not contains any value",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"test\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" contains some value",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I add \" more tests\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" contains the value \"test more tests\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-input-fields-on-a-page;clear-the-content-of-a-input-field",
        "keyword": "Scenario",
        "line": 21,
        "name": "Clear the content of a input field",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" not contains any value",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"test\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" contains some value",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#testInput\" contains the value \"test\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I clear the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" not contains any value",
            "result": {
              "status": "undefined"
            },
            "line": 26
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-input-fields-on-a-page",
    "keyword": "Feature",
    "line": 2,
    "name": "Test input fields on a page",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/inputfield.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test input fields on a certain page",
    "elements": [
      {
        "id": "test-input-fields-on-a-page;set-the-content-of-a-input-field",
        "keyword": "Scenario",
        "line": 10,
        "name": "Set the content of a input field",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" value is empty",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"test\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" value is not empty",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#testInput\" contains the value \"test\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-input-fields-on-a-page;add-content-to-a-input-field",
        "keyword": "Scenario",
        "line": 15,
        "name": "Add content to a input field",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" value is empty",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"test\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" value is not empty",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I add \" more tests\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" contains the value \"test more tests\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-input-fields-on-a-page;clear-the-content-of-a-input-field",
        "keyword": "Scenario",
        "line": 21,
        "name": "Clear the content of a input field",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" value is empty",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"test\" to the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" value is not empty",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#testInput\" contains the value \"test\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I clear the inputfield \"#testInput\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#testInput\" value is empty",
            "result": {
              "status": "undefined"
            },
            "line": 26
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-input-fields-on-a-page",
    "keyword": "Feature",
    "line": 2,
    "name": "Test input fields on a page",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/isEmpty.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test the opening, closing and content of modal windows",
    "elements": [
      {
        "id": "test-modals;test-if-alert-is-opened-accepted",
        "keyword": "Scenario",
        "line": 10,
        "name": "Test if alert is opened accepted",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "a alertbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#openAlert\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a alertbox is opened",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that a alertbox contains the text \"I am a alert box!\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I accept the alertbox",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a alertbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@Pending",
            "line": 1
          },
          {
            "name": "@test-demoapp",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-modals;test-if-alert-is-opened-&-dismissed",
        "keyword": "Scenario",
        "line": 18,
        "name": "Test if alert is opened & dismissed",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "a alertbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#openAlert\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a alertbox is opened",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I dismiss the alertbox",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a alertbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 23
          }
        ],
        "tags": [
          {
            "name": "@Pending",
            "line": 1
          },
          {
            "name": "@test-demoapp",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-modals;test-if-confirm-is-canceled",
        "keyword": "Scenario",
        "line": 25,
        "name": "Test if confirm is canceled",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "a confirmbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#confirmResult\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#openConfirm\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a confirmbox is opened",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that a alertbox contains the text \"I am a confirm box!\"",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I dismiss the confirmbox",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a confirmbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 32
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#confirmResult\" contains the text \"false\"",
            "result": {
              "status": "undefined"
            },
            "line": 33
          }
        ],
        "tags": [
          {
            "name": "@Pending",
            "line": 1
          },
          {
            "name": "@test-demoapp",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-modals;test-if-confirm-is-accepted",
        "keyword": "Scenario",
        "line": 35,
        "name": "Test if confirm is accepted",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "a confirmbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 36
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#confirmResult\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 37
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#openConfirm\"",
            "result": {
              "status": "undefined"
            },
            "line": 38
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a confirmbox is opened",
            "result": {
              "status": "undefined"
            },
            "line": 39
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I accept the confirmbox",
            "result": {
              "status": "undefined"
            },
            "line": 40
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a confirmbox is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 41
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#confirmResult\" contains the text \"true\"",
            "result": {
              "status": "undefined"
            },
            "line": 42
          }
        ],
        "tags": [
          {
            "name": "@Pending",
            "line": 1
          },
          {
            "name": "@test-demoapp",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-modals;test-if-prompt-is-opened-&-dismissed",
        "keyword": "Scenario",
        "line": 44,
        "name": "Test if prompt is opened & dismissed",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "a prompt is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 45
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#promptResult\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 46
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#openPrompt\"",
            "result": {
              "status": "undefined"
            },
            "line": 47
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a prompt is opened",
            "result": {
              "status": "undefined"
            },
            "line": 48
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that a alertbox contains the text \"I am a prompt!\"",
            "result": {
              "status": "undefined"
            },
            "line": 49
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I dismiss the prompt",
            "result": {
              "status": "undefined"
            },
            "line": 50
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a prompt is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 51
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#promptResult\" contains the text \"null\"",
            "result": {
              "status": "undefined"
            },
            "line": 52
          }
        ],
        "tags": [
          {
            "name": "@Pending",
            "line": 1
          },
          {
            "name": "@test-demoapp",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-modals;test-if-prompt-is-accepted",
        "keyword": "Scenario",
        "line": 54,
        "name": "Test if prompt is accepted",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "a prompt is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 55
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#promptResult\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 56
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#openPrompt\"",
            "result": {
              "status": "undefined"
            },
            "line": 57
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a prompt is opened",
            "result": {
              "status": "undefined"
            },
            "line": 58
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I accept the prompt",
            "result": {
              "status": "undefined"
            },
            "line": 59
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a prompt is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 60
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#promptResult\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 61
          }
        ],
        "tags": [
          {
            "name": "@Pending",
            "line": 1
          },
          {
            "name": "@test-demoapp",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-modals;test-if-prompt-has-text-entered",
        "keyword": "Scenario",
        "line": 63,
        "name": "Test if prompt has text entered",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "a prompt is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 64
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#promptResult\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 65
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#openPrompt\"",
            "result": {
              "status": "undefined"
            },
            "line": 66
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a prompt is opened",
            "result": {
              "status": "undefined"
            },
            "line": 67
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I enter \"test 1 2 3\" into the prompt",
            "result": {
              "status": "undefined"
            },
            "line": 68
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I accept the prompt",
            "result": {
              "status": "undefined"
            },
            "line": 69
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that a prompt is not opened",
            "result": {
              "status": "undefined"
            },
            "line": 70
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#promptResult\" contains the text \"test 1 2 3\"",
            "result": {
              "status": "undefined"
            },
            "line": 71
          }
        ],
        "tags": [
          {
            "name": "@Pending",
            "line": 1
          },
          {
            "name": "@test-demoapp",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-modals",
    "keyword": "Feature",
    "line": 3,
    "name": "Test modals",
    "tags": [
      {
        "name": "@Pending",
        "line": 1
      },
      {
        "name": "@test-demoapp",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/modals.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if I can move to a element\n    with an optional relative X and Y position",
    "elements": [
      {
        "id": "test-moveto-elements;move-to-just-the-element",
        "keyword": "Scenario",
        "line": 12,
        "name": "Move to just the element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 1024 by 768 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#moveTo\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I move to element \"#moveTo\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#moveTo\" has the class \"moveToClass\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I move to element \"body\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#moveTo\" does not have the class \"moveToClass\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-moveto-elements;move-to-the-element-with-a-x-and-y-offset",
        "keyword": "Scenario",
        "line": 18,
        "name": "Move to the element with a X and Y offset",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 1024 by 768 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#moveTo\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I move to element \"#moveTo\" with an offset of 15,5",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#moveTo\" has the class \"moveToClass\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-moveto-elements;move-to-the-element-with-a-too-large-offset",
        "keyword": "Scenario",
        "line": 22,
        "name": "Move to the element with a too large offset",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 1024 by 768 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"#moveTo\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I move to element \"#moveTo\" with an offset of 5000,5000",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#moveTo\" does not have the class \"moveToClass\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-moveto-elements",
    "keyword": "Feature",
    "line": 2,
    "name": "Test moveTo elements",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/moveTo.feature"
  },
  {
    "description": "    As a test framework\n    I should be able skip all these scenarios",
    "elements": [
      {
        "id": "pending-scenario;do-somethimg",
        "keyword": "Scenario",
        "line": 8,
        "name": "do somethimg",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "this will fail since this does not exist",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@wip",
            "line": 1
          },
          {
            "name": "@Pending",
            "line": 2
          },
          {
            "name": "@test-demoapp",
            "line": 3
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "pending-scenario",
    "keyword": "Feature",
    "line": 4,
    "name": "Pending scenario",
    "tags": [
      {
        "name": "@wip",
        "line": 1
      },
      {
        "name": "@Pending",
        "line": 2
      },
      {
        "name": "@test-demoapp",
        "line": 3
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/pending.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a certain value is selected for a certain\n    select element",
    "elements": [
      {
        "id": "test-select-elements;test-if-we-can-select-the-second-option-of-a-select-element",
        "keyword": "Scenario",
        "line": 10,
        "name": "Test if we can select the second option of a select element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the 1st option for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-the-third-option-of-a-select-element",
        "keyword": "Scenario",
        "line": 15,
        "name": "Test if we can select the third option of a select element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(3)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the 2nd option for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(3)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-the-fourth-option-of-a-select-element",
        "keyword": "Scenario",
        "line": 20,
        "name": "Test if we can select the fourth option of a select element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(4)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the 3th option for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(4)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 23
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-the-first-option-of-a-select-element",
        "keyword": "Scenario",
        "line": 25,
        "name": "Test if we can select the first option of a select element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the 1st option for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(1)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the 0th option for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(1)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 29
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-a-option-by-its-name",
        "keyword": "Scenario",
        "line": 31,
        "name": "Test if we can select a option by its name",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 32
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the option with the name \"secondOption\" for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 33
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 34
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-a-option-by-its-value",
        "keyword": "Scenario",
        "line": 36,
        "name": "Test if we can select a option by its value",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(3)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 37
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the option with the value \"third\" for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 38
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(3)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 39
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-a-option-by-its-visible-text",
        "keyword": "Scenario",
        "line": 41,
        "name": "Test if we can select a option by its visible text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(4)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 42
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the option with the text \"Option #4\" for element \"#selectElementTest\"",
            "result": {
              "status": "undefined"
            },
            "line": 43
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(4)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 44
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-a-option-by-its-value-using-xpath-selectors-only",
        "keyword": "Scenario",
        "line": 46,
        "name": "Test if we can select a option by its value using XPath selectors only",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 47
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the option with the value \"second\" for element \"//select[@id='selectElementTest']\"",
            "result": {
              "status": "undefined"
            },
            "line": 48
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 49
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-a-option-by-its-index-using-xpath-selectors",
        "keyword": "Scenario",
        "line": 51,
        "name": "Test if we can select a option by its index using XPath selectors",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(4)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 52
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the 3rd option for element \"//select[@id='selectElementTest']\"",
            "result": {
              "status": "undefined"
            },
            "line": 53
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(4)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 54
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-a-option-by-its-visible-text-using-xpath-selectors",
        "keyword": "Scenario",
        "line": 56,
        "name": "Test if we can select a option by its visible text using XPath selectors",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(3)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 57
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the option with the text \"Option #3\" for element \"//select[@id='selectElementTest']\"",
            "result": {
              "status": "undefined"
            },
            "line": 58
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(3)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 59
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-select-elements;test-if-we-can-select-a-option-by-its-name-using-xpath-selectors",
        "keyword": "Scenario",
        "line": 61,
        "name": "Test if we can select a option by its name using XPath selectors",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 62
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I select the option with the name \"secondOption\" for element \"//select[@id='selectElementTest']\"",
            "result": {
              "status": "undefined"
            },
            "line": 63
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#selectElementTest option:nth-child(2)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 64
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-select-elements",
    "keyword": "Feature",
    "line": 2,
    "name": "Test select elements",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/select.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a page has a certain structure",
    "elements": [
      {
        "id": "test-the-page-structure;test-if-the-page-has-a-h1-i-expect-its-at-the-top-of-the-page",
        "keyword": "Scenario",
        "line": 9,
        "name": "Test if the page has a H1 I expect its at the top of the page",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "there is an element \"h1\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"h1\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"h1\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 12
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-page-structure;test-if-the-page-has-only-one-h1-element",
        "keyword": "Scenario",
        "line": 14,
        "name": "Test if the page has only one H1 element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "there is no element \"h1:nth-child(n+2)\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 15
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-page-structure",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the page structure",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/structure.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test the text inside a element against the text inside\n    another element",
    "elements": [
      {
        "id": "test-text-contents-of-elements;elements-containing-different-text",
        "keyword": "Scenario",
        "line": 10,
        "name": "Elements containing different text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textComparison1\" not contains the same text as element \"#textComparison2\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;elements-containing-the-same-text",
        "keyword": "Scenario",
        "line": 13,
        "name": "Elements containing the same text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textComparison1\" contains the same text as element \"#textComparison3\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;elements-containing-no-text",
        "keyword": "Scenario",
        "line": 16,
        "name": "Elements containing no text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textComparison4\" contains the same text as element \"#textComparison5\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;elements-containing-text-and-elements",
        "keyword": "Scenario",
        "line": 19,
        "name": "Elements containing text and elements",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textComparison1\" contains the same text as element \"#textComparison6\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;elements-containing-text-inside-a-child-element",
        "keyword": "Scenario",
        "line": 22,
        "name": "Elements containing text inside a child element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textComparison1\" contains the same text as element \"#textComparison7\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;elements-containing-text-with-encoded-strings",
        "keyword": "Scenario",
        "line": 25,
        "name": "Elements containing text with encoded strings",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textComparison8\" contains the same text as element \"#textComparison9\"",
            "result": {
              "status": "undefined"
            },
            "line": 26
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;element-containing-different-text",
        "keyword": "Scenario",
        "line": 28,
        "name": "Element containing different text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textDoesNotContainCucumber\" not contains the text \"This element contains cucumber\"",
            "result": {
              "status": "undefined"
            },
            "line": 29
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;element-containing-the-same-text",
        "keyword": "Scenario",
        "line": 31,
        "name": "Element containing the same text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#textDoesContainCucumber\" contains the text \"This element contains cucumber\"",
            "result": {
              "status": "undefined"
            },
            "line": 32
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;input-containing-different-text",
        "keyword": "Scenario",
        "line": 34,
        "name": "Input containing different text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#valueDoesNotContainCucumber\" not contains the value \"This input contains cucumber\"",
            "result": {
              "status": "undefined"
            },
            "line": 35
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;input-containing-the-same-text",
        "keyword": "Scenario",
        "line": 37,
        "name": "Input containing the same text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#valueDoesContainCucumber\" contains the value \"This input contains cucumber\"",
            "result": {
              "status": "undefined"
            },
            "line": 38
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;button-contains-text",
        "keyword": "Scenario",
        "line": 41,
        "name": "Button contains text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button[id='waitForCheckedBtn']\" contains the text \"Check\"",
            "result": {
              "status": "undefined"
            },
            "line": 42
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;button-not-contains-the-text",
        "keyword": "Scenario",
        "line": 44,
        "name": "Button not contains the text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button[id='waitForCheckedBtn']\" not contains the text \"Not checked\"",
            "result": {
              "status": "undefined"
            },
            "line": 45
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;element-containing-different-text",
        "keyword": "Scenario",
        "line": 47,
        "name": "Element containing different text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button[id='waitForCheckedBtn']\" not contains the text \"This element contains cucumber\"",
            "result": {
              "status": "undefined"
            },
            "line": 48
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;button-contains-any-text",
        "keyword": "Scenario",
        "line": 50,
        "name": "Button contains any text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button[id='waitForCheckedBtn']\" contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 51
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-text-contents-of-elements;button-is-not-empty",
        "keyword": "Scenario",
        "line": 53,
        "name": "Button is not empty",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button[id='waitForCheckedBtn']\" text is not empty",
            "result": {
              "status": "undefined"
            },
            "line": 54
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-text-contents-of-elements",
    "keyword": "Feature",
    "line": 2,
    "name": "Test text contents of elements",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/textComparison.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a page has a certain title",
    "elements": [
      {
        "id": "test-the-page-title;test-if-the-demo-app-has-the-title-\"demo-app\"",
        "keyword": "Scenario",
        "line": 9,
        "name": "Test if the demo app has the title \"DEMO APP\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the page title does equal the text \"DEMO APP\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"h1\" contains the same text as element \".subtitle\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-the-page-title;test-if-the-demo-app-does-not-have-the-title-\"google\"",
        "keyword": "Scenario",
        "line": 13,
        "name": "Test if the demo app does not have the title \"Google\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the page title does not equal the text \"Google\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the page url is not \"https://www.google.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"h1\" not contains the text \"Google\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-the-page-title",
    "keyword": "Feature",
    "line": 2,
    "name": "Test the page title",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/title.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if the url is a certain value",
    "elements": [
      {
        "id": "test-if-the-url-is-a-certain-value;the-url-should-not-be-http://www.google.com/",
        "keyword": "Scenario",
        "line": 6,
        "name": "The url should not be http://www.google.com/",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the full URL to not be \"http://www.google.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-the-url-is-a-certain-value;the-url-should-be-baseurl",
        "keyword": "Scenario",
        "line": 10,
        "name": "The url should be baseURL",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the URL path to be \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-the-url-is-a-certain-value;the-path-should-not-be-/index.html",
        "keyword": "Scenario",
        "line": 14,
        "name": "The path should not be /index.html",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the URL path to not be \"/index.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-the-url-is-a-certain-value;the-path-should-be-/index.html",
        "keyword": "Scenario",
        "line": 18,
        "name": "The path should be /index.html",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/index.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the URL path to be \"/index.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-the-url-is-a-certain-value;the-url-should-not-contain-\"google\"",
        "keyword": "Scenario",
        "line": 22,
        "name": "The url should not contain \"google\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the full URL to not contain \"google\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-the-url-is-a-certain-value;the-url-should-not-contain-\"index\"",
        "keyword": "Scenario",
        "line": 26,
        "name": "The url should not contain \"index\"",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/index.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the full URL to contain \"index\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-if-the-url-is-a-certain-value",
    "keyword": "Feature",
    "line": 2,
    "name": "Test if the url is a certain value",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/urlValidation.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if delayed actions are being performed",
    "elements": [
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-to-exist",
        "keyword": "Scenario",
        "line": 10,
        "name": "Test if element to exist",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "there is no element \"#waitForCreateElement > span\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForCreateBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCreateElement > span\" for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-exists",
        "keyword": "Scenario",
        "line": 15,
        "name": "Test if element exists",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "there is no element \"#waitForCreateElement > span\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForCreateBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCreateElement > span\" for 1000ms to exist",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-becomes-unchecked",
        "keyword": "Scenario",
        "line": 20,
        "name": "Test if element becomes unchecked",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#waitForCheckedElement\" is checked",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to not be checked",
            "result": {
              "status": "undefined"
            },
            "line": 25
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-becomes-disabled",
        "keyword": "Scenario",
        "line": 27,
        "name": "Test if element becomes disabled",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForEnabledBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#waitForEnabledElement\" is enabled",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForEnabledBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForEnabledElement\" for 1000ms to not be enabled",
            "result": {
              "status": "undefined"
            },
            "line": 32
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-becomes-not-selected",
        "keyword": "Scenario",
        "line": 34,
        "name": "Test if element becomes not selected",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForSelectedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 35
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 36
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#waitForSelectedElement option:nth-child(2)\" is selected",
            "result": {
              "status": "undefined"
            },
            "line": 37
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForSelectedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 38
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForSelectedElement option:nth-child(2)\" for 1000ms to not be selected",
            "result": {
              "status": "undefined"
            },
            "line": 39
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-becomes-not-visible",
        "keyword": "Scenario",
        "line": 41,
        "name": "Test if element becomes not visible",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForVisibleBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 42
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 43
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#waitForVisibleElement\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 44
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForVisibleBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 45
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForVisibleElement\" for 1000ms to not be visible",
            "result": {
              "status": "undefined"
            },
            "line": 46
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-to-not-contain-a-text",
        "keyword": "Scenario",
        "line": 48,
        "name": "Test if element to not contain a text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForContainsTextBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 49
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 50
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#waitForContainsTextElement\" contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 51
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForContainsTextBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 52
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForContainsTextElement\" for 1000ms to not contain a text",
            "result": {
              "status": "undefined"
            },
            "line": 53
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-to-not-contain-a-value",
        "keyword": "Scenario",
        "line": 55,
        "name": "Test if element to not contain a value",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForContainsValueBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 56
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 57
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#waitForContainsValueElement\" contains any value",
            "result": {
              "status": "undefined"
            },
            "line": 58
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForContainsValueBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 59
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForContainsValueElement\" for 2000ms to not contain a value",
            "result": {
              "status": "undefined"
            },
            "line": 60
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-1;test-if-element-not-exists",
        "keyword": "Scenario",
        "line": 62,
        "name": "Test if element not exists",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForCreateBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 63
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 64
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#waitForCreateElement > span\" does exist",
            "result": {
              "status": "undefined"
            },
            "line": 65
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForCreateBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 66
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCreateElement > span\" for 1000ms to not exist",
            "result": {
              "status": "undefined"
            },
            "line": 67
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-waiting-for-actions-part-1",
    "keyword": "Feature",
    "line": 2,
    "name": "Test waiting for actions part 1",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/wait1.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if delayed actions are being performed",
    "elements": [
      {
        "id": "test-waiting-for-actions-part-2;test-if-element-becomes-checked-after-2000-ms",
        "keyword": "Scenario",
        "line": 10,
        "name": "Test if element becomes checked after 2000 ms",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the checkbox \"#waitForCheckedElement\" is not checked",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 2000ms to be checked",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-2;test-if-element-becomes-checked-with-different-mouse-clicks",
        "keyword": "Scenario",
        "line": 15,
        "name": "Test if element becomes checked with different mouse clicks",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the checkbox \"#waitForCheckedElement\" is not checked",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I left click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to be checked",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I left click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to not be checked",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I right click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to be checked",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I right click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to not be checked",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I middle click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to be checked",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I middle click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to not be checked",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I double click on the element \"#waitForCheckedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForCheckedElement\" for 1000ms to not be checked",
            "result": {
              "status": "undefined"
            },
            "line": 30
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-2;test-if-element-becomes-enabled",
        "keyword": "Scenario",
        "line": 32,
        "name": "Test if element becomes enabled",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#waitForEnabledElement\" is not enabled",
            "result": {
              "status": "undefined"
            },
            "line": 33
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForEnabledBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 34
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForEnabledElement\" for 1000ms to be enabled",
            "result": {
              "status": "undefined"
            },
            "line": 35
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-2;test-if-element-becomes-selected",
        "keyword": "Scenario",
        "line": 37,
        "name": "Test if element becomes selected",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#waitForSelectedElement option:nth-child(2)\" is not selected",
            "result": {
              "status": "undefined"
            },
            "line": 38
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForSelectedBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 39
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForSelectedElement option:nth-child(2)\" for 1000ms to be selected",
            "result": {
              "status": "undefined"
            },
            "line": 40
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-2;test-if-element-becomes-visible",
        "keyword": "Scenario",
        "line": 42,
        "name": "Test if element becomes visible",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#waitForVisibleElement\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 43
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForVisibleBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 44
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForVisibleElement\" for 1000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 45
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-2;test-if-element-to-contain-a-text",
        "keyword": "Scenario",
        "line": 47,
        "name": "Test if element to contain a text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#waitForContainsTextElement\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 48
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForContainsTextBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 49
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForContainsTextElement\" for 1000ms to contain a text",
            "result": {
              "status": "undefined"
            },
            "line": 50
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-waiting-for-actions-part-2;test-if-element-to-contain-a-value",
        "keyword": "Scenario",
        "line": 52,
        "name": "Test if element to contain a value",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the element \"#waitForContainsValueElement\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 53
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#waitForContainsValueBtn\"",
            "result": {
              "status": "undefined"
            },
            "line": 54
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \"#waitForContainsValueElement\" for 1000ms to contain a value",
            "result": {
              "status": "undefined"
            },
            "line": 55
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-waiting-for-actions-part-2",
    "keyword": "Feature",
    "line": 2,
    "name": "Test waiting for actions part 2",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/wait2.feature"
  },
  {
    "description": "    As a developer\n    I want to be able to test if a element opens a new window/tab",
    "elements": [
      {
        "id": "test-if-new-windows/tabs-are-being-opened;test-if-a-new-window/tab-is-not-being-opened",
        "keyword": "Scenario",
        "line": 10,
        "name": "Test if a new window/tab is not being opened",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have closed all but the first tab",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect a new window has not been opened",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-new-windows/tabs-are-being-opened;test-if-a-default-link-does-not-open-a-new-window/tab",
        "keyword": "Scenario",
        "line": 13,
        "name": "Test if a default link does not open a new window/tab",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have closed all but the first tab",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#linkSameWindow\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect a new window has not been opened",
            "result": {
              "status": "undefined"
            },
            "line": 15
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-new-windows/tabs-are-being-opened;test-if-a-link-with-target-\"_blank\"-does-open-a-new-window/tab",
        "keyword": "Scenario",
        "line": 17,
        "name": "Test if a link with target \"_blank\" does open a new window/tab",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have closed all but the first tab",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#linkNewWindow\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect a new window has been opened",
            "result": {
              "status": "undefined"
            },
            "line": 19
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-new-windows/tabs-are-being-opened;test-if-a-window/tab-from-\"google.com\"-has-the-correct-url",
        "keyword": "Scenario",
        "line": 21,
        "name": "Test if a window/tab from \"google.com\" has the correct url",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have closed all but the first tab",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#linkNewWindow\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the url \"http://example.com/\" is opened in a new window",
            "result": {
              "status": "undefined"
            },
            "line": 23
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-new-windows/tabs-are-being-opened;test-all-opened-windows/tabs-are-now-closed",
        "keyword": "Scenario",
        "line": 25,
        "name": "Test all opened windows/tabs are now closed",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have closed all but the first tab",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect a new window has not been opened",
            "result": {
              "status": "undefined"
            },
            "line": 26
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-new-windows/tabs-are-being-opened;test-if-we-can-close-the-last-opened-window/tab",
        "keyword": "Scenario",
        "line": 28,
        "name": "Test if we can close the last opened window/tab",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have closed all but the first tab",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#linkNewWindow\"",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect a new window has been opened",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I close the last opened window",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect a new window has not been opened",
            "result": {
              "status": "undefined"
            },
            "line": 32
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-if-new-windows/tabs-are-being-opened;test-if-we-can-focus-the-last-opened-window/tab",
        "keyword": "Scenario",
        "line": 34,
        "name": "Test if we can focus the last opened window/tab",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have closed all but the first tab",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"#linkNewWindow\"",
            "result": {
              "status": "undefined"
            },
            "line": 35
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect a new window has been opened",
            "result": {
              "status": "undefined"
            },
            "line": 36
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I focus the last opened window",
            "result": {
              "status": "undefined"
            },
            "line": 37
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the full URL to be \"http://example.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 38
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I close the last opened window",
            "result": {
              "status": "undefined"
            },
            "line": 39
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the URL path to be \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 40
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-if-new-windows/tabs-are-being-opened",
    "keyword": "Feature",
    "line": 2,
    "name": "Test if new windows/tabs are being opened",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/window.feature"
  },
  {
    "description": "    As a Developer in Test\n    I want to test the scrolling and view port relationship.",
    "elements": [
      {
        "id": "viewport-test;header-in-viewport,-footer-outside-viewport",
        "keyword": "Scenario",
        "line": 6,
        "name": "Header in viewport, footer outside viewport",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 1024 by 768 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"h1\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"h1\" is within the viewport",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"footer\" is not within the viewport",
            "result": {
              "status": "undefined"
            },
            "line": 12
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "viewport-test;footer-in-viewport,-header-outside-viewport",
        "keyword": "Scenario",
        "line": 14,
        "name": "Footer in viewport, header outside viewport",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a screen that is 1024 by 768 pixels",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 1000ms",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I scroll to the element \"footer\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"footer\" is within the viewport",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"h1\" is not within the viewport",
            "result": {
              "status": "undefined"
            },
            "line": 20
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "viewport-test",
    "keyword": "Feature",
    "line": 2,
    "name": "Viewport test",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-demoapp/features/withinViewport.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to initialize my automation test environment",
    "elements": [
      {
        "id": "test-init;download-drivers",
        "keyword": "Scenario",
        "line": 6,
        "name": "download drivers",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "test-init",
    "keyword": "Feature",
    "line": 1,
    "name": "test init",
    "tags": [],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-init/features/test_init.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to use postman to run my collectioin test",
    "elements": [
      {
        "id": "postman-collection;run-postman-collection-test---in-newman-commandline",
        "keyword": "Scenario",
        "line": 14,
        "name": "Run postman collection test - in newman commandline",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I have a postman environment file \"Restful-Booker.postman_environment\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I have a postman collection file \"Restful-Booker.postman_collection\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I run the postman collection in newman commandline",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "the postman test should not have failure",
            "result": {
              "status": "undefined"
            },
            "line": 16
          }
        ],
        "tags": [
          {
            "name": "@test-postman",
            "line": 1
          },
          {
            "name": "@Postman",
            "line": 2
          },
          {
            "name": "@Demo",
            "line": 3
          },
          {
            "name": "@SmokeTest",
            "line": 4
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "postman-collection",
    "keyword": "Feature",
    "line": 5,
    "name": "postman collection",
    "tags": [
      {
        "name": "@test-postman",
        "line": 1
      },
      {
        "name": "@Postman",
        "line": 2
      },
      {
        "name": "@Demo",
        "line": 3
      },
      {
        "name": "@SmokeTest",
        "line": 4
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-postman/features/postman_collection.feature"
  },
  {
    "description": "    As a developer\n    I want to be test table rows and columns",
    "elements": [
      {
        "id": "test-table-rows-and-columns;check-expected-table-rows-and-columns",
        "keyword": "Scenario",
        "line": 16,
        "name": "check expected table rows and columns",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/jstable.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"h1\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#firm_table\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".expected .rows\" contains the text \"6 rows\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".expected .columns\" contains the text \"5 columns\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I assign the number from the element \".expected .rows\" as \"expectedRows\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I assign the number from the element \".expected .columns\" as \"expectedColumns\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"tbody tr\" does exist exactly ENV:expectedRows times",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"tbody td\" inside the 1st parent element \"tbody tr\" does exist exactly ENV:expectedColumns times",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-table",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-table-rows-and-columns;check-downloaded-table-csv-rows-and-columns",
        "keyword": "Scenario",
        "line": 20,
        "name": "check downloaded table csv rows and columns",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/jstable.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"h1\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#firm_table\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".expected .rows\" contains the text \"6 rows\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".expected .columns\" contains the text \"5 columns\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I assign the number from the element \".expected .rows\" as \"expectedRows\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I assign the number from the element \".expected .columns\" as \"expectedColumns\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I delete all download files with the name \"table_*.csv\"",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"button=Export to\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click on the element \"li=CSV\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on download file \"table_*.csv\" for 5000ms to exist",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the downloaded file \"table_*.csv\" contains exactly ENV:expectedRows data rows and exactly ENV:expectedColumns columns",
            "result": {
              "status": "undefined"
            },
            "line": 25
          }
        ],
        "tags": [
          {
            "name": "@test-table",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "test-table-rows-and-columns;check-downloaded-table-json-rows-and-columns",
        "keyword": "Scenario",
        "line": 27,
        "name": "check downloaded table json rows and columns",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the path \"/jstable.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"h1\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#firm_table\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".expected .rows\" contains the text \"6 rows\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".expected .columns\" contains the text \"5 columns\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I assign the number from the element \".expected .rows\" as \"expectedRows\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I assign the number from the element \".expected .columns\" as \"expectedColumns\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I delete all download files with the name \"table_*.json\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"button=Export to\"",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click on the element \"li=JSON\"",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on download file \"table_*.json\" for 5000ms to exist",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the downloaded file \"table_*.json\" contains exactly ENV:expectedRows data rows and exactly ENV:expectedColumns columns",
            "result": {
              "status": "undefined"
            },
            "line": 32
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that all data entries in the downloaded json file \"table_*.json\" conform to the template file \"testTable_template.json\"",
            "result": {
              "status": "undefined"
            },
            "line": 33
          }
        ],
        "tags": [
          {
            "name": "@test-table",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "test-table-rows-and-columns",
    "keyword": "Feature",
    "line": 3,
    "name": "test table rows and columns",
    "tags": [
      {
        "name": "@test-table",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-table/features/testDownloadTable.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to open browser to download a few files and investigate file contents",
    "elements": [
      {
        "id": "file-download-and-validation;open-url,-check-content,-download-file-and-check-downloaded-content---pdf-file",
        "keyword": "Scenario",
        "line": 8,
        "name": "Open url, check content, download file and check downloaded content - PDF file",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I delete all download files with the name \"pdf-test.*\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"http://www.orimi.com/pdf-test.pdf\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Yukon_Logo\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I park mouse at the center position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I hover mouse at the 0,100 position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click on the \"PDF_download_icon\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 5000ms",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I doubleClick on the \"FileSave_button:0.5:Save\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on download file \"pdf-test.pdf\" for 5000ms to exist",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the download file \"pdf-test.pdf\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the downloaded file \"pdf-test.pdf\" contains exactly 18 lines",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"pdf-test.pdf\" contains more than 10 lines",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"pdf-test.pdf\" contains less than 20 lines",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"pdf-test.pdf\" at line 4 does contain the text \"PDF Test File\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"pdf-test.pdf\" does not contain the text \"PDF Tast File\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"pdf-test.pdf\" does match the text \"Box \\d{4}\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          }
        ],
        "tags": [
          {
            "name": "@test-download",
            "line": 1
          },
          {
            "name": "@SmokeTest",
            "line": 7
          }
        ],
        "type": "scenario"
      },
      {
        "id": "file-download-and-validation;download-and-check-file---xls-file",
        "keyword": "Scenario",
        "line": 26,
        "name": "Download and check file - XLS file",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I delete all download files with the name \"file_example_XLS_10*\"",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"https://file-examples.com/wp-content/uploads/2017/02/file_example_XLS_10.xls\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on download file \"file_example_XLS_10.xls\" for 5000ms to exist",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I announce message: \"I have downloaded file_example_XLS_10.xls to ENV:DownloadPathLocal\"",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I announce message at browser: \"I have downloaded file_example_XLS_10.xls to ENV:DownloadPathLocal\"",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the downloaded file \"file_example_XLS_10.xls\" contains 10 lines",
            "result": {
              "status": "undefined"
            },
            "line": 32
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"file_example_XLS_10.xls\" contains 10 rows and 8 columns",
            "result": {
              "status": "undefined"
            },
            "line": 33
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"file_example_XLS_10.xls\" contains 9 data rows and 7 data columns",
            "result": {
              "status": "undefined"
            },
            "line": 34
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"file_example_XLS_10.xls\" at row 0 does contain the text \"0,First Name,Last Name,Gender,Country,Age,Date,Id\"",
            "result": {
              "status": "undefined"
            },
            "line": 35
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the downloaded file \"file_example_XLS_10.xls\" at row 1 and column 4 does equal the text \"United States\"",
            "result": {
              "status": "undefined"
            },
            "line": 36
          }
        ],
        "tags": [
          {
            "name": "@test-download",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "file-download-and-validation;browse-directory-and-open-file---png-file",
        "keyword": "Scenario",
        "line": 38,
        "name": "Browse directory and open file - PNG file",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the file \"ENV:PROJECTRUNPATH\"",
            "result": {
              "status": "undefined"
            },
            "line": 39
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click the element \"a=test-webpage/\"",
            "result": {
              "status": "undefined"
            },
            "line": 40
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click the element \"a=testimages/\"",
            "result": {
              "status": "undefined"
            },
            "line": 41
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click the element \"a=Yukon_Logo.png\"",
            "result": {
              "status": "undefined"
            },
            "line": 42
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"Yukon_Logo\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 43
          }
        ],
        "tags": [
          {
            "name": "@test-download",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "file-download-and-validation",
    "keyword": "Feature",
    "line": 2,
    "name": "File download and validation",
    "tags": [
      {
        "name": "@test-download",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-fileActions/file_download.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to test bestvpn html5demos page - drag and drop page by image",
    "elements": [
      {
        "id": "bestvpn-site---drag-and-drop-image;test-bestvpn-html5demos-page---drag-and-drop-page-by-image",
        "keyword": "Scenario",
        "line": 8,
        "name": "Test bestvpn html5demos page - drag and drop page by image",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I open the url \"https://bestvpn.org/html5demos/drag/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"target_drop_box\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I should see the \"NordVPN:0.9\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I drag \"NordVPN:0.9\" and drop to \"target_drop_box\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I hover on the \"target_drop_box\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should not see the \"NordVPN:0.9\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "bestvpn-site---drag-and-drop-image",
    "keyword": "Feature",
    "line": 3,
    "name": "bestvpn site - drag and drop image",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      },
      {
        "name": "@Demo",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-imageActions/bestvpn_site_drag_and_drop_images.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to test see and click images",
    "elements": [
      {
        "id": "varmour-site-screen-text-and-see-and-click-image;test-screen-area-text",
        "keyword": "Scenario",
        "line": 11,
        "name": "Test screen area text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://www.varmour.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait every 5 seconds for 1 minute on the screen area to display the regex \"pssst\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the \"last-seen\" screen area does contain the text \"Pssst\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"Screen-100\" image does contain the text \"Product\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "varmour-site-screen-text-and-see-and-click-image;test-image-wait-and-text",
        "keyword": "Scenario",
        "line": 16,
        "name": "Test image wait and text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://www.varmour.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"vArmour_logo\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"last-seen\" image does appear exactly 1 time",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"last-seen\" image does match the regex \"v.*m.*r\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"last-seen\" image does mimic the text \"varmour\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "varmour-site-screen-text-and-see-and-click-image;test-find-image-with-text",
        "keyword": "Scenario",
        "line": 22,
        "name": "Test find image with text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://www.varmour.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 3000ms",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"dialogRobot\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"last-seen\" image does appear exactly 1 time",
            "result": {
              "status": "undefined"
            },
            "line": 25
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the \"last-seen\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"robotDialogWindow:0.5:Bot\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the \"last-seen\" image does match the text \"VAR:robotDialogWindowTextRegex\"",
            "result": {
              "status": "undefined"
            },
            "line": 29
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "varmour-site-screen-text-and-see-and-click-image",
    "keyword": "Feature",
    "line": 3,
    "name": "vArmour site screen text and see and click image",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      },
      {
        "name": "@Demo",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-imageActions/varmour_site_images_see_read_text_and_click.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to test brenz.net mouse tracker page",
    "elements": [
      {
        "id": "brenz.net-mouse-tracker-page;brenz.net-mouse-tracker-page",
        "keyword": "Scenario",
        "line": 8,
        "name": "brenz.net mouse tracker page",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://www.brenz.net/snippets/xy.asp\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I park mouse at the center position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect mouse at the center position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I wave mouse at the 180,100 position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I park mouse at the topLeft position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect mouse at the topLeft position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I hover mouse at the topRight position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect mouse at the topRight position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I hover mouse at the bottomLeft position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect mouse at the bottomLeft position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I park mouse at the bottomRight position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect mouse at the bottomRight position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I shake mouse at the 1800,1000 position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I circle mouse at the center position of the screen",
            "result": {
              "status": "undefined"
            },
            "line": 22
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "brenz.net-mouse-tracker-page",
    "keyword": "Feature",
    "line": 3,
    "name": "brenz.net mouse tracker page",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      },
      {
        "name": "@Demo",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-mouseActions/brenz_mouse_position.feature"
  },
  {
    "description": "    As a developer\n    I should be able to use given text snippets",
    "elements": [
      {
        "id": "sample-snippets-test-part-1;open-url",
        "keyword": "Scenario",
        "line": 7,
        "name": "open URL",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the page url is not \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the full URL to be \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the full URL to not be \"http://google.com\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;open-sub-page-of-weburl",
        "keyword": "Scenario",
        "line": 13,
        "name": "open sub page of weburl",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the page url is not \"http://webdriverjs.christian-bromann.com/two.html\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the full URL to be \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the full URL to not be \"http://google.com\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;click-on-link",
        "keyword": "Scenario",
        "line": 19,
        "name": "click on link",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "the page title does not equal the text \"two\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the link \"two\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the page title does equal the text \"two\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;click-on-button",
        "keyword": "Scenario",
        "line": 25,
        "name": "click on button",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".btn1_clicked\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the button \".btn1\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".btn1_clicked\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 29
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;double-click-on-a-button",
        "keyword": "Scenario",
        "line": 31,
        "name": "double click on a button",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 32
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".btn1_dblclicked\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 33
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I double click on the element \".btn1\"",
            "result": {
              "status": "undefined"
            },
            "line": 34
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".btn1_dblclicked\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 35
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;click-on-element",
        "keyword": "Scenario",
        "line": 37,
        "name": "click on element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 38
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".btn1_clicked\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 39
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \".btn1\"",
            "result": {
              "status": "undefined"
            },
            "line": 40
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".btn1_clicked\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 41
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;add-value-to-an-input-element",
        "keyword": "Scenario",
        "line": 43,
        "name": "add value to an input element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 44
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"//html/body/section/form/input[1]\" not contains the value \"abc\"",
            "result": {
              "status": "undefined"
            },
            "line": 45
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I add \"bc\" to the inputfield \"//html/body/section/form/input[1]\"",
            "result": {
              "status": "undefined"
            },
            "line": 46
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"//html/body/section/form/input[1]\" contains the value \"abc\"",
            "result": {
              "status": "undefined"
            },
            "line": 47
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;set-value-to-an-input-element",
        "keyword": "Scenario",
        "line": 49,
        "name": "set value to an input element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 50
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"//html/body/section/form/input[1]\" not contains the value \"bc\"",
            "result": {
              "status": "undefined"
            },
            "line": 51
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"bc\" to the inputfield \"//html/body/section/form/input[1]\"",
            "result": {
              "status": "undefined"
            },
            "line": 52
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"//html/body/section/form/input[1]\" contains the value \"bc\"",
            "result": {
              "status": "undefined"
            },
            "line": 53
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;clear-value-of-input-element",
        "keyword": "Scenario",
        "line": 55,
        "name": "clear value of input element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 56
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set \"test\" to the inputfield \"//html/body/section/form/input[1]\"",
            "result": {
              "status": "undefined"
            },
            "line": 57
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I clear the inputfield \"//html/body/section/form/input[1]\"",
            "result": {
              "status": "undefined"
            },
            "line": 58
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"//html/body/section/form/input[1]\" not contains any text",
            "result": {
              "status": "undefined"
            },
            "line": 59
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;drag-n-drop",
        "keyword": "Scenario",
        "line": 61,
        "name": "drag n drop",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 62
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".searchinput\" not contains the value \"Dropped!\"",
            "result": {
              "status": "undefined"
            },
            "line": 63
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I drag element \"#overlay\" to element \".red\"",
            "result": {
              "status": "undefined"
            },
            "line": 64
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".searchinput\" contains the value \"Dropped!\"",
            "result": {
              "status": "undefined"
            },
            "line": 65
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;submit-form",
        "keyword": "Scenario",
        "line": 67,
        "name": "submit form",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 68
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "there is no element \".gotDataA\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 69
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I submit the form \".send\"",
            "result": {
              "status": "undefined"
            },
            "line": 70
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".gotDataA\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 71
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;wait-for-element",
        "keyword": "Scenario",
        "line": 73,
        "name": "wait for element",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 74
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "there is no element \".lateElem\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 75
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \".lateElem\" for 5000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 76
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;wait-for-element-using-default-wait-time",
        "keyword": "Scenario",
        "line": 78,
        "name": "wait for element using default wait time",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 79
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "there is no element \".lateElem\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 80
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I wait on element \".lateElem\" to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 81
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-1;pause",
        "keyword": "Scenario",
        "line": 83,
        "name": "pause",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 84
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "there is no element \".lateElem\" on the page",
            "result": {
              "status": "undefined"
            },
            "line": 85
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I pause for 3000ms",
            "result": {
              "status": "undefined"
            },
            "line": 86
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".lateElem\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 87
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "sample-snippets-test-part-1",
    "keyword": "Feature",
    "line": 2,
    "name": "Sample Snippets test part 1",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/bromann_site_sampleSnippets1.feature"
  },
  {
    "description": "    As a developer\n    I should be able to use given text snippets",
    "elements": [
      {
        "id": "sample-snippets-test-part-2;query-title",
        "keyword": "Scenario",
        "line": 6,
        "name": "query title",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the page title does equal the text \"WebdriverJS Testpage\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the page title does not equal the text \"Other title\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the page title does equal the text \"WebdriverJS Testpage\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the page title does not equal the text \"Other title\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-visibility",
        "keyword": "Scenario",
        "line": 13,
        "name": "check visibility",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".btn1\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".btn1_clicked\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".btn1\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".btn1_clicked\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;compare-texts",
        "keyword": "Scenario",
        "line": 20,
        "name": "compare texts",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#secondPageLink\" contains the same text as element \"#secondPageLink\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#secondPageLink\" contains not the same text as element \"#githubRepo\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#secondPageLink\" contains the same text as element \"#secondPageLink\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#secondPageLink\" not contains the same text as element \"#githubRepo\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-text-content",
        "keyword": "Scenario",
        "line": 27,
        "name": "check text content",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#secondPageLink\" contains the text \"two\"",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"#secondPageLink\" not contains the text \"andere linktext\"",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#secondPageLink\" contains the text \"two\"",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"#secondPageLink\" not contains the text \"anderer linktext\"",
            "result": {
              "status": "undefined"
            },
            "line": 32
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-input-content",
        "keyword": "Scenario",
        "line": 34,
        "name": "check input content",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 35
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"//html/body/section/form/input[1]\" contains the value \"a\"",
            "result": {
              "status": "undefined"
            },
            "line": 36
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"//html/body/section/form/input[1]\" not contains the value \"aa\"",
            "result": {
              "status": "undefined"
            },
            "line": 37
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"//html/body/section/form/input[1]\" contains the value \"a\"",
            "result": {
              "status": "undefined"
            },
            "line": 38
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"//html/body/section/form/input[1]\" not contains the value \"aa\"",
            "result": {
              "status": "undefined"
            },
            "line": 39
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-attribut",
        "keyword": "Scenario",
        "line": 41,
        "name": "check attribut",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 42
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the attribute \"data-foundby\" from element \"#newWindow\" is \"partial link text\"",
            "result": {
              "status": "undefined"
            },
            "line": 43
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the attribute \"data-foundby\" from element \"#newWindow\" is not \"something else\"",
            "result": {
              "status": "undefined"
            },
            "line": 44
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the attribute \"data-foundby\" from element \"#newWindow\" is \"partial link text\"",
            "result": {
              "status": "undefined"
            },
            "line": 45
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the attribute \"data-foundby\" from element \"#newWindow\" is not \"something else\"",
            "result": {
              "status": "undefined"
            },
            "line": 46
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-css-attribut",
        "keyword": "Scenario",
        "line": 48,
        "name": "check css attribut",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 49
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the css attribute \"background-color\" from element \".red\" is \"rgba(255,0,0,1)\"",
            "result": {
              "status": "undefined"
            },
            "line": 50
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the css attribute \"background-color\" from element \".red\" is not \"rgba(0,255,0,1)\"",
            "result": {
              "status": "undefined"
            },
            "line": 51
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the css attribute \"background-color\" from element \".red\" is \"rgba(255,0,0,1)\"",
            "result": {
              "status": "undefined"
            },
            "line": 52
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the css attribute \"background-color\" from element \".red\" is not \"rgba(0,255,0,1)\"",
            "result": {
              "status": "undefined"
            },
            "line": 53
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-width-and-height",
        "keyword": "Scenario",
        "line": 55,
        "name": "check width and height",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 56
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is 102px broad",
            "result": {
              "status": "undefined"
            },
            "line": 57
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is 102px tall",
            "result": {
              "status": "undefined"
            },
            "line": 58
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is not 103px broad",
            "result": {
              "status": "undefined"
            },
            "line": 59
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is not 103px tall",
            "result": {
              "status": "undefined"
            },
            "line": 60
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".red\" is 102px broad",
            "result": {
              "status": "undefined"
            },
            "line": 61
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".red\" is 102px tall",
            "result": {
              "status": "undefined"
            },
            "line": 62
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".red\" is not 103px broad",
            "result": {
              "status": "undefined"
            },
            "line": 63
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".red\" is not 103px tall",
            "result": {
              "status": "undefined"
            },
            "line": 64
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-offset",
        "keyword": "Scenario",
        "line": 68,
        "name": "check offset",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 69
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is positioned at 15px on the x axis",
            "result": {
              "status": "undefined"
            },
            "line": 70
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is positioned at 242px on the y axis",
            "result": {
              "status": "undefined"
            },
            "line": 71
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is not positioned at 16px on the x axis",
            "result": {
              "status": "undefined"
            },
            "line": 72
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \".red\" is not positioned at 243px on the y axis",
            "result": {
              "status": "undefined"
            },
            "line": 73
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".red\" is positioned at 15px on the x axis",
            "result": {
              "status": "undefined"
            },
            "line": 74
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".red\" is positioned at 242px on the y axis",
            "result": {
              "status": "undefined"
            },
            "line": 75
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".red\" is not positioned at 16px on the x axis",
            "result": {
              "status": "undefined"
            },
            "line": 76
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".red\" is not positioned at 243px on the y axis",
            "result": {
              "status": "undefined"
            },
            "line": 77
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          },
          {
            "name": "@Pending",
            "line": 67
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;check-selected",
        "keyword": "Scenario",
        "line": 79,
        "name": "check selected",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 80
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the checkbox \".checkbox_notselected\" is not checked",
            "result": {
              "status": "undefined"
            },
            "line": 81
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \".checkbox_notselected\"",
            "result": {
              "status": "undefined"
            },
            "line": 82
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".checkbox_notselected\" is checked",
            "result": {
              "status": "undefined"
            },
            "line": 83
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;set-/-read-cookie",
        "keyword": "Scenario",
        "line": 87,
        "name": "set / read cookie",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 88
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the cookie \"test\" does not exist",
            "result": {
              "status": "undefined"
            },
            "line": 89
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I set a cookie \"test\" with the content \"test123\"",
            "result": {
              "status": "undefined"
            },
            "line": 90
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test\" exists",
            "result": {
              "status": "undefined"
            },
            "line": 91
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the cookie \"test\" contains \"test123\"",
            "result": {
              "status": "undefined"
            },
            "line": 92
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the cookie \"test\" not contains \"test1234\"",
            "result": {
              "status": "undefined"
            },
            "line": 93
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          },
          {
            "name": "@Pending",
            "line": 86
          }
        ],
        "type": "scenario"
      },
      {
        "id": "sample-snippets-test-part-2;delete-cookie",
        "keyword": "Scenario",
        "line": 97,
        "name": "delete cookie",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"http://webdriverjs.christian-bromann.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 98
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the cookie \"test\" does exist",
            "result": {
              "status": "undefined"
            },
            "line": 99
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I delete the cookie \"test\"",
            "result": {
              "status": "undefined"
            },
            "line": 100
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the cookie \"test\" not exists",
            "result": {
              "status": "undefined"
            },
            "line": 101
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          },
          {
            "name": "@Pending",
            "line": 96
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "sample-snippets-test-part-2",
    "keyword": "Feature",
    "line": 2,
    "name": "Sample Snippets test part 2",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/bromann_site_sampleSnippets2.feature"
  },
  {
    "description": "    As a Developer in Test\n    I want to test if the github.com failed login screen displays an error",
    "elements": [
      {
        "id": "github-test;login-with-fake-credentials",
        "keyword": "Scenario",
        "line": 6,
        "name": "login with fake credentials",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://github.com/login\"",
            "result": {
              "status": "undefined"
            },
            "line": 7
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I clear the inputfield \"#login_field\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I add \"marketionist\" to the inputfield \"#login_field\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I clear the inputfield \"#password\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I add \"1111\" to the inputfield \"#password\"",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click on the button \"//*[@value='Sign in']\"",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"#js-flash-container .flash-error\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 13
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "github-test",
    "keyword": "Feature",
    "line": 2,
    "name": "Github test",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/github_site_login.feature"
  },
  {
    "description": "    As a Developer in Test\n    I want to search for webdriverio repository\n    So that I can use it in my future tests",
    "elements": [
      {
        "id": "github-test;open-url",
        "keyword": "Scenario",
        "line": 7,
        "name": "open URL",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://github.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the URL host to be \"github.com\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the page title does equal the text \"The world’s leading software development platform · GitHub\"",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "id": "github-test;search-for-webdriverio-repository",
        "keyword": "Scenario",
        "line": 12,
        "name": "search for webdriverio repository",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://github.com/search\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I clear the inputfield \"[placeholder='Search GitHub']\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "the element \"[placeholder='Search GitHub']\" not contains any value",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I click on the element \"[placeholder='Search GitHub']\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I add \"webdriverio\" to the inputfield \"[placeholder='Search GitHub']\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I add \" \" to the inputfield \"[placeholder='Search GitHub']\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I add \"selenium\" to the inputfield \"[placeholder='Search GitHub']\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"[placeholder='Search GitHub']\" contains the value \"webdriverio selenium\"",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"button=Search\"",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".repo-list-item:first-child\" contains the text \"webdriverio\"",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".repo-list-item:first-child\" contains the text \"selenium\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "github-test",
    "keyword": "Feature",
    "line": 2,
    "name": "Github test",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/github_site_search.feature"
  },
  {
    "description": "    As a Developer in Test\n    I want to search for webdriverio repository\n    And check if some elements are existing and others are not",
    "elements": [
      {
        "id": "github-test;open-url",
        "keyword": "Scenario",
        "line": 7,
        "name": "open URL",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://github.com/webdriverio/cucumber-boilerplate\"",
            "result": {
              "status": "undefined"
            },
            "line": 8
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \".octicon-mark-github\" does exist",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \".some-other-element\" does not exist",
            "result": {
              "status": "undefined"
            },
            "line": 10
          }
        ],
        "tags": [
          {
            "name": "@test-demoapp",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "github-test",
    "keyword": "Feature",
    "line": 2,
    "name": "Github test",
    "tags": [
      {
        "name": "@test-demoapp",
        "line": 1
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/github_site_webElement_isExisting.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to test see and click images",
    "elements": [
      {
        "id": "varmour-site-nth-and-child-element-validation-and-action;test-the-nth-web-element-order-and-text",
        "keyword": "Scenario",
        "line": 12,
        "name": "Test the nth web element order and text",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://www.varmour.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on element \".menu\" for 1000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"a=Start Free Trial\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the 1st element \"li\" inside the parent element \".menu\" contains the text \"Product\"",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the 2nd element \"li\" inside the parent element \".menu\" contains the text \"Virtual Events\"",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the 3rd element \"li\" inside the parent element \".menu\" contains the text \"Blog\"",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the 4th element \"li\" inside the parent element \".menu\" contains the text \"Contact Us\"",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the 5th element \"li\" inside the parent element \".menu\" contains the text \"More\"",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the element \".btn-wrap\" inside the parent element \".menu\" contains the text \"Free Trial\"",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"a=Start Free Trial\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 20
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      },
      {
        "id": "varmour-site-nth-and-child-element-validation-and-action;test-the-nth-web-element-action",
        "keyword": "Scenario",
        "line": 22,
        "name": "Test the nth web element action",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://www.varmour.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on element \".menu\" for 1000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"a=Start Free Trial\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect the 4th element \"li\" inside the parent element \".menu\" contains the text \"Contact Us\"",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click the 4th element \"li\" inside the parent element \".menu\"",
            "result": {
              "status": "undefined"
            },
            "line": 25
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I focus the last opened tab",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"vArmour_ContactUs:0.8:Contact\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 28
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "varmour-site-nth-and-child-element-validation-and-action",
    "keyword": "Feature",
    "line": 3,
    "name": "vArmour site nth and child element validation and action",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      },
      {
        "name": "@Demo",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/varmour_site_nth_and_child_element.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to test see and click images",
    "elements": [
      {
        "id": "varmour-site-nth-iframe-validation-and-action;test-the-nth-iframe-element-visibility-and-click-action",
        "keyword": "Scenario",
        "line": 15,
        "name": "Test the nth iframe element visibility and click action",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://www.varmour.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on element \".menu\" for 1000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I switch to the parent iframe",
            "result": {
              "status": "undefined"
            },
            "line": 11
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on element \"a=Start Free Trial\" for 5000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 12
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 3000ms",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect the element \"iframe\" does exist no less than 4 times",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"button#widgetButton\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"button#widgetCloseButton\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 18
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I switch to the 4th iframe",
            "result": {
              "status": "undefined"
            },
            "line": 19
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on element \"button#widgetButton\" for 5000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 20
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"html body\" contains the text \"Pssst… want to see how our platform helps CISOs\"",
            "result": {
              "status": "undefined"
            },
            "line": 21
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"a=Start Free Trial\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 22
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"button\"",
            "result": {
              "status": "undefined"
            },
            "line": 23
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"button=Sure!\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 24
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"button=Nope, I'll explore on my own.\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 25
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click on the element \"button=Sure!\"",
            "result": {
              "status": "undefined"
            },
            "line": 26
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button=Yes!\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 27
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"button=No, thanks.\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 28
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button#widgetCloseButton\" is visible",
            "result": {
              "status": "undefined"
            },
            "line": 29
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I switch to the parent iframe",
            "result": {
              "status": "undefined"
            },
            "line": 30
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I expect that the element \"button#widgetCloseButton\" is not visible",
            "result": {
              "status": "undefined"
            },
            "line": 31
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I expect that the element \"a=Start Free Trial\" becomes visible",
            "result": {
              "status": "undefined"
            },
            "line": 32
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "varmour-site-nth-iframe-validation-and-action",
    "keyword": "Feature",
    "line": 3,
    "name": "vArmour site nth iframe validation and action",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      },
      {
        "name": "@Demo",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/varmour_site_nth_iframe.feature"
  },
  {
    "description": "  As a QA Engineer\n  I want to test see and click images",
    "elements": [
      {
        "id": "varmour-site-tab-validation-and-action;test-tab-action",
        "keyword": "Scenario",
        "line": 12,
        "name": "Test tab action",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "name": "I open the url \"https://www.varmour.com/\"",
            "result": {
              "status": "undefined"
            },
            "line": 9
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I wait on element \".menu\" for 1000ms to be visible",
            "result": {
              "status": "undefined"
            },
            "line": 10
          },
          {
            "arguments": [],
            "keyword": "When ",
            "name": "I click the element \"li=Contact Us\" inside the parent element \".menu\"",
            "result": {
              "status": "undefined"
            },
            "line": 13
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I focus the last opened tab",
            "result": {
              "status": "undefined"
            },
            "line": 14
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I pause for 500ms",
            "result": {
              "status": "undefined"
            },
            "line": 15
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should see the \"vArmour_ContactUs:0.8:Contact\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 16
          },
          {
            "arguments": [],
            "keyword": "And ",
            "name": "I close the last opened tab",
            "result": {
              "status": "undefined"
            },
            "line": 17
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "name": "I should not see the \"vArmour_ContactUs:0.8:Contact\" image on the screen",
            "result": {
              "status": "undefined"
            },
            "line": 18
          }
        ],
        "tags": [
          {
            "name": "@test-webpage",
            "line": 1
          },
          {
            "name": "@Demo",
            "line": 2
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "varmour-site-tab-validation-and-action",
    "keyword": "Feature",
    "line": 3,
    "name": "vArmour site tab validation and action",
    "tags": [
      {
        "name": "@test-webpage",
        "line": 1
      },
      {
        "name": "@Demo",
        "line": 2
      }
    ],
    "uri": "/home/xywang68/Projects/AutoBDD/test-projects/AutoBDD-example/test-webpage/features/test-webpageActions/varmour_site_tab.feature"
  }
]